module DataDeriver.Main where

import DataDeriver.Deriver
import DataDeriver.Parser hiding (main)
import DataDeriver.Preprocessor
import Data.List

--- Reads the Frege files given as arguments and appends Typeable and
--- Data implementations for all data-Blocks which are annotated with
--- {-# derive DataTypeable #-}, replacing any existing code after
--- {-# autogenerated by DataDeriver #-}.
main :: [String] -> IO ()
main args = (sequence $ map deriveFile args) >> return ()

deriveFile :: String -> IO ()
deriveFile filename = do
    contents <- readFile filename
    writeFile filename $ getNewContents contents

getNewContents :: String -> String
getNewContents contents =
    replaceDataInstances contents instances
    where
        (packag, modul, ls) = preprocess contents
        decls = map fromRight (getTopdecls ls)
        instances = unlines $ map (createInstance packag modul) decls
        fromRight (Right a) = a
        fromRight (Left a)  = error $ show a

replaceDataInstances :: String -> String -> String
replaceDataInstances fileContents "" =
    removeDataInstances fileContents
replaceDataInstances fileContents instances =
    unlines [removeDataInstances fileContents,
             "{-# autogenerated by DataDeriver #-}",
             instances]

removeDataInstances :: String -> String
removeDataInstances fileContents =
    fileContents.replaceAll ´(?s)\n\{-# autogenerated by DataDeriver #-\}.*´ ""
