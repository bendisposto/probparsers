// ProB Answer Parser 

dependsOn(':prologlib')



dependencies {
    sablecc(group: 'sablecc', name: 'sablecc', version: '3.2')
    compile project(path: ":prologlib", configuration: "archives") 
}

sourceSets {
    main {
        java {
          	srcDirs = ['build/temp','src/main/java']
        }
    }
}

task genParserTasks {
	def generated = []
	inputs.dir new File('src/main/resources')
	outputs.dir new File('build/temp','generated')
    fileTree {
	    from 'src/main/resources'
	    include '**/*.scc'
	}.each {
       name -> 
        def tn = name.getName().split("\\.")[0]
        task "parser$tn"(type:JavaExec) { 
		 doFirst{ file('build/temp').mkdirs() }
		 main = 'org.sablecc.sablecc.SableCC'
		// classpath =  sourceSets.main.compileClasspath
		 classpath = configurations.sablecc
		 maxHeapSize = '1024m'
		 args = ['-d','build/temp',name] 
		}
	generated += "parser$tn"  
	}
	
	doLast {
		generated.each{
			tasks.findByName(it).execute()
		}
	}
}


jar {
 include '**/*.class'
 exclude '**.*.scc' 
 from 'build/temp'
 include '**/*.dat'
}

compileJava { 
 dependsOn = ['genParserTasks',':prologlib:deploy'] 
}

sourceSets.test.runtimeClasspath += files(sourceSets.main.java.srcDirs)




