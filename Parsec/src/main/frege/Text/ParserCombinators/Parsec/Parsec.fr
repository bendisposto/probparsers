{--
    Parsec, the Fast Monadic Parser combinator library, see
    'http://www.cs.uu.nl/people/daan/parsec.html''.
    
    Inspired by:
    
    * Graham Hutton and Erik Meijer:
      Monadic Parser Combinators.
      Technical report NOTTCS-TR-96-4. 
      Department of Computer Science, University of Nottingham, 1996. 
      <http://www.cs.nott.ac.uk/~gmh/monparsing.ps>
      
    * Andrew Partridge, David Wright: 
      Predictive parser combinators need four values to report errors.
      Journal of Functional Programming 6(2): 355-364, 1996
      
    This helper module exports elements from the basic libraries.

    [Module]      Text.ParserCombinators.Parsec
    [Copyright]   (c) Daan Leijen 1999-2001
    [License]     BSD-style (see the file Libraries/LICENSE)
    
    [Maintainer]  Antoine Latter <aslatter@gmail.com>
    [Stability]   provisional
    [Portability] portable

    NOTE Text.ParserCombinators.Parsec whould clash with package Text.ParserCombinators.Parsec.
    So either break compatiblity with this module name or with all other module names.
-}

module Text.ParserCombinators.Parsec.Parsec where

import frege.Prelude hiding (<|>,pzero,try)
-- textual positions
import Text.ParserCombinators.Parsec.Pos (public SourcePos, public SourceName, public Line, public Column, public sourceName, public sourceLine, public sourceColumn, public incSourceLine, public incSourceColumn, public setSourceLine, public setSourceColumn, public setSourceName)
-- parse errors
import Text.ParserCombinators.Parsec.Error (public ParseError, public errorPos)
import Text.ParserCombinators.Parsec.Prim  public       -- primitive combinators
import Text.ParserCombinators.Parsec.Combinator public  -- derived combinators
import Text.ParserCombinators.Parsec.Char public        -- character parsers
