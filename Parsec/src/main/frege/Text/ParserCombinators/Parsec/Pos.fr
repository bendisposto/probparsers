{-
    Textual source positions.
    
    [Module]      Text.ParserCombinators.Parsec.Pos
    [Copyright]   (c) Daan Leijen 1999-2001
    [License]     BSD-style (see the file Libraries/LICENSE)
    
    [Maintainer]  Antoine Latter <aslatter@gmail.com>
    [Stability]   provisional
    [Portability] portable
-}

module Text.ParserCombinators.Parsec.Pos where

--- Source Positions, a file name, a line and a column.
--- upper left is (1,1)
type SourceName     = String
type Line           = Int
type Column         = Int

--- The abstract data type @SourcePos@ represents source positions. It
--- contains the name of the source (i.e. file name), a line number and
--- a column number. @SourcePos@ is an instance of the 'Show', 'Eq' and
--- 'Ord' class.
data SourcePos      = !SourcePos SourceName Line Column
derive Eq SourcePos
derive Ord SourcePos

--- Create a new 'SourcePos' with the given source name,
--- line number and column number.
newPos :: SourceName -> Line -> Column -> SourcePos
newPos sourceName line column
    = SourcePos sourceName line column

--- Create a new 'SourcePos' with the given source name,
--- and line number and column number set to 1, the upper left.
initialPos :: SourceName -> SourcePos
initialPos sourceName
    = newPos sourceName 1 1

--- Extracts the name of the source from a source position.
sourceName :: SourcePos -> SourceName
sourceName (SourcePos name line column) = name 

--- Extracts the line number from a source position.
sourceLine :: SourcePos -> Line
sourceLine (SourcePos name line column) = line

--- Extracts the column number from a source position.
sourceColumn :: SourcePos -> Column
sourceColumn (SourcePos name line column) = column

--- Increments the line number of a source position.
incSourceLine :: SourcePos -> Line -> SourcePos
incSourceLine (SourcePos name line column) n = SourcePos name (line+n) column

--- Increments the column number of a source position.
incSourceColumn :: SourcePos -> Column -> SourcePos
incSourceColumn (SourcePos name line column) n = SourcePos name line (column+n)

--- Set the name of the source.
setSourceName :: SourcePos -> SourceName -> SourcePos
setSourceName (SourcePos name line column) n = SourcePos n line column

--- Set the line number of a source position.
setSourceLine :: SourcePos -> Line -> SourcePos
setSourceLine (SourcePos name line column) n = SourcePos name n column

--- Set the column number of a source position.
setSourceColumn :: SourcePos -> Column -> SourcePos
setSourceColumn (SourcePos name line column) n = SourcePos name line n

--- The expression @updatePosString pos s@ updates the source position
--- @pos@ by calling 'updatePosChar' on every character in @s@, ie.
--- @foldl updatePosChar pos string@.
updatePosString :: SourcePos -> [Char] -> SourcePos
updatePosString pos string
    = forcePos (fold updatePosChar pos string)

updatePosChar   :: SourcePos -> Char -> SourcePos
updatePosChar (pos@(SourcePos name line column)) c
    = forcePos $
      case c of
        '\n' -> SourcePos name (line+1) 1
        '\t' -> SourcePos name line (column + 8 - ((column-1) `mod` 8))
        _    -> SourcePos name line (column + 1)
        

private forcePos :: SourcePos -> SourcePos      
private forcePos (pos@(SourcePos name line column))
    = seq line (seq column (pos))

-- --------------------------------------------------------
--- Show positions 
-- --------------------------------------------------------                                                 
instance Show SourcePos where
  show (SourcePos name line column)
    | null name = showLineColumn
    | otherwise = "\"" ++ name ++ "\" " ++ showLineColumn
    where
      showLineColumn    = "(line " ++ show line ++
                          ", column " ++ show column ++
                          ")" 
